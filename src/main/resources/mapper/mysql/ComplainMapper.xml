<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ComplainMapper" >
  <resultMap id="BaseResultMap" type="com.greatwall.ideas.dto.Complain" >
    <id column="COMPLAIN_ID" property="complainId" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="COMPLAIN_CONTENT" property="complainContent" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    COMPLAIN_ID, USER_ID, COMPLAIN_CONTENT, CREATE_TIME, STATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from td_cyb_complain
    where COMPLAIN_ID = #{complainId,jdbcType=INTEGER}
  </select>
  <select id="selectPage" resultMap="BaseResultMap" parameterType="com.greatwall.ideas.dto.Complain" >
    select 
    <include refid="Base_Column_List" />
    from td_cyb_complain
    <where>
    	<if test="complainId != null" >
        and COMPLAIN_ID = #{complainId,jdbcType=INTEGER}
      	</if>
      	<if test="userId != null" >
        and USER_ID = #{userId,jdbcType=INTEGER}
      	</if>
      	<if test="state != null" >
        and STATE = #{state,jdbcType=VARCHAR}
      	</if>
    </where>
    order by CREATE_TIME desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from td_cyb_complain
    where COMPLAIN_ID = #{complainId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.greatwall.ideas.dto.Complain" >
    insert into td_cyb_complain (USER_ID, COMPLAIN_CONTENT, 
      CREATE_TIME, STATE)
    values ( #{userId,jdbcType=INTEGER}, #{complainContent,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.greatwall.ideas.dto.Complain" >
    insert into td_cyb_complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        COMPLAIN_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="complainContent != null" >
        COMPLAIN_CONTENT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="state != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="complainId != null" >
        #{complainId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="complainContent != null" >
        #{complainContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.greatwall.ideas.dto.Complain" >
    update td_cyb_complain
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="complainContent != null" >
        COMPLAIN_CONTENT = #{complainContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where COMPLAIN_ID = #{complainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.greatwall.ideas.dto.Complain" >
    update td_cyb_complain
    set USER_ID = #{userId,jdbcType=INTEGER},
      COMPLAIN_CONTENT = #{complainContent,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=VARCHAR}
    where COMPLAIN_ID = #{complainId,jdbcType=INTEGER}
  </update>
</mapper>